{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfCovidpp"
		},
		"tr_population_event_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/5752d228-6856-4914-8673-1cae39b52f96/resourceGroups/covid_rg/providers/Microsoft.Storage/storageAccounts/covidreportsapp"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/df_death_and_cases')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_cases_and_death",
								"type": "DatasetReference"
							},
							"name": "casesanddeathsource"
						},
						{
							"dataset": {
								"referenceName": "ds_lookup_country",
								"type": "DatasetReference"
							},
							"name": "countryLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_casesanddeaths_sink",
								"type": "DatasetReference"
							},
							"name": "LoadCasesDeathsADLS"
						}
					],
					"transformations": [
						{
							"name": "FilteronlyEuropedata"
						},
						{
							"name": "GetCountryCode"
						},
						{
							"name": "SelectRequiredColumns"
						},
						{
							"name": "PivotCount"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcontinent as string,\n\t\tpopulation as integer,\n\t\tindicator as string,\n\t\tdaily_count as short,\n\t\tdate as date,\n\t\trate_14_day as double,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true) ~> casesanddeathsource\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> countryLookup\ncasesanddeathsource filter(continent == 'Europe' && not(isNull(country_code))) ~> FilteronlyEuropedata\nFilteronlyEuropedata, countryLookup lookup(casesanddeathsource@country == countryLookup@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> GetCountryCode\nGetCountryCode select(mapColumn(\n\t\tcountry = casesanddeathsource@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tcontinent = casesanddeathsource@continent,\n\t\tpopulation = casesanddeathsource@population,\n\t\tindicator,\n\t\tdaily_count,\n\t\treported_date = date,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRequiredColumns\nSelectRequiredColumns pivot(groupBy(country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tcontinent,\n\t\treported_date,\n\t\tsource,\n\t\tpopulation),\n\tpivotBy(indicator, ['confirmed cases', 'deaths']),\n\tcount = sum(daily_count),\n\tcolumnNaming: '$V_$N',\n\tlateral: true) ~> PivotCount\nPivotCount sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\ttruncate: true,\n\tpartitionBy('roundRobin', 2),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> LoadCasesDeathsADLS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_transform_hospital')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_raw_hospital_admission",
								"type": "DatasetReference"
							},
							"name": "HospitalAdmissionSource"
						},
						{
							"dataset": {
								"referenceName": "ds_hospital_lookup_dae",
								"type": "DatasetReference"
							},
							"name": "dateLookup"
						},
						{
							"dataset": {
								"referenceName": "ds_lookup_country",
								"type": "DatasetReference"
							},
							"name": "CountryLookupsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_hospital_dailystream",
								"type": "DatasetReference"
							},
							"name": "DailyStreamSink"
						},
						{
							"dataset": {
								"referenceName": "ds_weekly_sink",
								"type": "DatasetReference"
							},
							"name": "Weeklysink"
						}
					],
					"transformations": [
						{
							"name": "SelectReqFields"
						},
						{
							"name": "CountryLookup"
						},
						{
							"name": "SelectReqFields2"
						},
						{
							"name": "SplitDailyandWeekly"
						},
						{
							"name": "AggregateTheDateDimTable"
						},
						{
							"name": "LookupDateDim"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tindicator as string,\n\t\tdate as date,\n\t\tyear_week as string,\n\t\tvalue as double,\n\t\tsource as string,\n\t\turl as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> HospitalAdmissionSource\nsource(output(\n\t\tdate_key as string,\n\t\tdate as string,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tday as string,\n\t\tday_name as string,\n\t\tday_of_year as string,\n\t\tweek_of_month as string,\n\t\tweek_of_year as string,\n\t\tmonth_name as string,\n\t\tyear_month as string,\n\t\tyear_week as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> dateLookup\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CountryLookupsource\nHospitalAdmissionSource select(mapColumn(\n\t\tcountry,\n\t\tindicator,\n\t\treported_date = date,\n\t\treported_year_week = year_week,\n\t\tvalue,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectReqFields\nSelectReqFields, CountryLookupsource lookup(SelectReqFields@country == CountryLookupsource@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> CountryLookup\nCountryLookup select(mapColumn(\n\t\tcountry = SelectReqFields@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tindicator,\n\t\treported_date,\n\t\treported_year_week,\n\t\tvalue,\n\t\tsource,\n\t\tcontinent,\n\t\tpopulation\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectReqFields2\nSelectReqFields2 split(indicator =='Daily hospital occupancy' || indicator =='Daily ICU occupancy',\n\tdisjoint: false) ~> SplitDailyandWeekly@(DailyStream, WeeklyStream)\ndateLookup aggregate(groupBy({derived_date date} = year+'W-'+lpad(week_of_year,2,'0')),\n\tweek_start_date = min(date),\n\t\tweek_end_date = max(date)) ~> AggregateTheDateDimTable\nSplitDailyandWeekly@WeeklyStream, AggregateTheDateDimTable lookup(reported_year_week == {derived_date date},\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupDateDim\nSplitDailyandWeekly@DailyStream sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DailyStreamSink\nLookupDateDim sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tmapColumn(\n\t\tcountry,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tindicator,\n\t\treported_date,\n\t\treported_year_week,\n\t\tvalue,\n\t\tsource,\n\t\tcontinent,\n\t\tpopulation,\n\t\t{derived_date date},\n\t\tweek_start_date,\n\t\tweek_end_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Weeklysink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_casesandHospital')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CasesAndDeath",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_death_and_cases",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"casesanddeathsource": {},
									"countryLookup": {},
									"LoadCasesDeathsADLS": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					},
					{
						"name": "Hospitalization",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_transform_hospital",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"HospitalAdmissionSource": {},
									"dateLookup": {},
									"CountryLookupsource": {},
									"DailyStreamSink": {},
									"Weeklysink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-26T07:45:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_death_and_cases')]",
				"[concat(variables('factoryId'), '/dataflows/df_transform_hospital')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_ingest_ecdc_http')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_ecdc_ingest",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-05-26T05:04:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								38
							],
							"hours": [
								10
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_population_event')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_ingest_population",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/population/blobs/",
					"blobPathEndsWith": ".gz",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_population_event_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		}
	]
}